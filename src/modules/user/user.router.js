import { Router } from "express";
import * as userController from "./controller/user.js";
import { isAuthenticated } from "../../middleware/authentication.middleware.js";

const router = Router();

/**
 * @swagger
 * tags:
 *   name: User
 *   description: |
 *     ## ๐ค ุฅุฏุงุฑุฉ ุงููุณุชุฎุฏููู
 *     
 *     ูููุฑ ูุฐุง ุงููุณู ุงูุนูููุงุช ุงููุชุนููุฉ ุจุฅุฏุงุฑุฉ ูููุงุช ุงููุณุชุฎุฏููู ุงูุดุฎุตูุฉ:
 *     
 *     ### ๐ ุงูุนูููุงุช ุงููุชุงุญุฉ:
 *     - **ุนุฑุถ ุงูููู ุงูุดุฎุตู**: ุงูุญุตูู ุนูู ูุนูููุงุช ุงููุณุชุฎุฏู ุงูุญุงูู
 *     - **ุชุญุฏูุซ ุงูููู ุงูุดุฎุตู**: ุชุนุฏูู ุงูุจูุงูุงุช ุงูุดุฎุตูุฉ (ูุฑูุจุงู)
 *     - **ุญุฐู ุงูุญุณุงุจ**: ุฅูุบุงุก ุงูุญุณุงุจ ููุงุฆูุงู (ูุฑูุจุงู)
 *     
 *     ### ๐ ุงูุชูุซูู ุงููุทููุจ:
 *     ุฌููุน endpoints ูู ูุฐุง ุงููุณู ุชุชุทูุจ ุฑูุฒ ุงูุชูุซูู (JWT Token)
 *     
 *     ### ๐ก ููุงุญุธุฉ:
 *     ูุฌุจ ุชุณุฌูู ุงูุฏุฎูู ุฃููุงู ูููุตูู ููุฐู ุงูุนูููุงุช
 */

/**
 * @swagger
 * components:
 *   schemas:
 *     UserProfile:
 *       type: object
 *       description: ูุนูููุงุช ุงูููู ุงูุดุฎุตู ูููุณุชุฎุฏู
 *       properties:
 *         _id:
 *           type: string
 *           description: ูุนุฑู ุงููุณุชุฎุฏู ุงููุฑูุฏ
 *           example: "65f16b12345678901234567890abcdef"
 *         firstName:
 *           type: string
 *           description: ุงูุงุณู ุงูุฃูู
 *           example: "ุฃุญูุฏ"
 *         lastName:
 *           type: string
 *           description: ุงูุงุณู ุงูุฃุฎูุฑ
 *           example: "ูุญูุฏ"
 *         email:
 *           type: string
 *           format: email
 *           description: ุงูุจุฑูุฏ ุงูุฅููุชุฑููู
 *           example: "ahmed.mohamed@example.com"
 *         phone:
 *           type: string
 *           description: ุฑูู ุงููุงุชู
 *           example: "01234567890"
 *         role:
 *           type: string
 *           enum: [user, instructor, admin]
 *           description: |
 *             ุฏูุฑ ุงููุณุชุฎุฏู ูู ุงููุธุงู:
 *             - `user`: ุทุงูุจ
 *             - `instructor`: ูุนูู
 *             - `admin`: ูุฏูุฑ
 *           example: "user"
 *         governorate:
 *           type: string
 *           description: ุงููุญุงูุธุฉ
 *           example: "ุงููุงูุฑุฉ"
 *         gradeLevel:
 *           type: string
 *           description: ุงููุฑุญูุฉ ุงูุฏุฑุงุณูุฉ (ููุทูุงุจ ููุท)
 *           example: "ุงููุฑุญูุฉ ุงูุซุงูููุฉ"
 *         subject:
 *           type: string
 *           description: ุงููุงุฏุฉ ุงูุชู ูุฏุฑุณูุง (ูููุนูููู ููุท)
 *           example: "ุงูุฑูุงุถูุงุช"
 *         status:
 *           type: string
 *           enum: [pending, approved, rejected]
 *           description: |
 *             ุญุงูุฉ ุงูุญุณุงุจ (ูููุนูููู ููุท):
 *             - `pending`: ูู ุงูุชุธุงุฑ ุงูููุงููุฉ
 *             - `approved`: ุชู ุงูููุงููุฉ
 *             - `rejected`: ุชู ุงูุฑูุถ
 *           example: "approved"
 *         isConfirmed:
 *           type: boolean
 *           description: ูู ุชู ุชูุนูู ุงูุจุฑูุฏ ุงูุฅููุชุฑููู
 *           example: true
 *         isLoggedIn:
 *           type: boolean
 *           description: ูู ุงููุณุชุฎุฏู ูุณุฌู ุฏุฎูู ุญุงููุงู
 *           example: true
 *         provider:
 *           type: string
 *           description: ุทุฑููุฉ ุฅูุดุงุก ุงูุญุณุงุจ
 *           example: "system"
 *         document:
 *           type: object
 *           description: ูุซููุฉ ุงูุชุฃููู (ูููุนูููู ููุท)
 *           properties:
 *             secure_url:
 *               type: string
 *               description: ุฑุงุจุท ุงููุซููุฉ ุงููุญูู
 *               example: "https://res.cloudinary.com/topamun/image/upload/v1234567890/topamun/documents/fatma_zahra/document.pdf"
 *             public_id:
 *               type: string
 *               description: ูุนุฑู ุงููุซููุฉ ูู Cloudinary
 *               example: "topamun/documents/fatma_zahra/document"
 *         createdAt:
 *           type: string
 *           format: date-time
 *           description: ุชุงุฑูุฎ ุฅูุดุงุก ุงูุญุณุงุจ
 *           example: "2024-03-15T10:30:00.000Z"
 *         updatedAt:
 *           type: string
 *           format: date-time
 *           description: ุชุงุฑูุฎ ุขุฎุฑ ุชุญุฏูุซ
 *           example: "2024-03-15T10:30:00.000Z"
 *   
 *   responses:
 *     UserProfileSuccess:
 *       description: ุชู ุงูุญุตูู ุนูู ุงูููู ุงูุดุฎุตู ุจูุฌุงุญ
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               success:
 *                 type: boolean
 *                 example: true
 *               user:
 *                 $ref: '#/components/schemas/UserProfile'
 *           examples:
 *             student-profile:
 *               summary: ููู ุดุฎุตู ูุทุงูุจ
 *               description: ูุซุงู ุนูู ููู ุดุฎุตู ูุทุงูุจ ูู ุงููุฑุญูุฉ ุงูุซุงูููุฉ
 *               value:
 *                 success: true
 *                 user:
 *                   _id: "65f16b12345678901234567890abcdef"
 *                   firstName: "ุฃุญูุฏ"
 *                   lastName: "ูุญูุฏ"
 *                   email: "ahmed.mohamed@example.com"
 *                   phone: "01234567890"
 *                   role: "user"
 *                   governorate: "ุงููุงูุฑุฉ"
 *                   gradeLevel: "ุงููุฑุญูุฉ ุงูุซุงูููุฉ"
 *                   status: "approved"
 *                   isConfirmed: true
 *                   isLoggedIn: true
 *                   provider: "system"
 *                   createdAt: "2024-03-15T10:30:00.000Z"
 *                   updatedAt: "2024-03-15T10:30:00.000Z"
 *             instructor-profile:
 *               summary: ููู ุดุฎุตู ููุนูู
 *               description: ูุซุงู ุนูู ููู ุดุฎุตู ููุนูู ูุนุชูุฏ
 *               value:
 *                 success: true
 *                 user:
 *                   _id: "65f16b12345678901234567890abcdef"
 *                   firstName: "ูุงุทูุฉ"
 *                   lastName: "ุฒูุฑุงุก"
 *                   email: "fatma.zahra@example.com"
 *                   phone: "01234567891"
 *                   role: "instructor"
 *                   governorate: "ุงูุฌูุฒุฉ"
 *                   subject: "ุงูุฑูุงุถูุงุช"
 *                   status: "approved"
 *                   isConfirmed: true
 *                   isLoggedIn: true
 *                   provider: "system"
 *                   document:
 *                     secure_url: "https://res.cloudinary.com/topamun/image/upload/v1234567890/topamun/documents/fatma_zahra/document.pdf"
 *                     public_id: "topamun/documents/fatma_zahra/document"
 *                   createdAt: "2024-03-15T10:30:00.000Z"
 *                   updatedAt: "2024-03-15T10:30:00.000Z"
 *             admin-profile:
 *               summary: ููู ุดุฎุตู ููุฏูุฑ
 *               description: ูุซุงู ุนูู ููู ุดุฎุตู ููุฏูุฑ ุงููุธุงู
 *               value:
 *                 success: true
 *                 user:
 *                   _id: "65f16b12345678901234567890abcdef"
 *                   firstName: "ูุญูุฏ"
 *                   lastName: "ุฃุญูุฏ"
 *                   email: "admin@topamun.com"
 *                   phone: "01234567892"
 *                   role: "admin"
 *                   governorate: "ุงููุงูุฑุฉ"
 *                   status: "approved"
 *                   isConfirmed: true
 *                   isLoggedIn: true
 *                   provider: "system"
 *                   createdAt: "2024-03-15T10:30:00.000Z"
 *                   updatedAt: "2024-03-15T10:30:00.000Z"
 */

/**
 * @swagger
 * /users/profile:
 *   get:
 *     summary: ุงูุญุตูู ุนูู ุงูููู ุงูุดุฎุตู
 *     description: |
 *       ## ๐ค ุนุฑุถ ุงูููู ุงูุดุฎุตู ูููุณุชุฎุฏู ุงูุญุงูู
 *       
 *       ### ๐ฏ ุงูุบุฑุถ:
 *       ุงูุญุตูู ุนูู ุฌููุน ูุนูููุงุช ุงููุณุชุฎุฏู ุงูุดุฎุตูุฉ ุจูุงุกู ุนูู ุงูุฑูุฒ ุงููููุฒ ุงูููุฑุณู
 *       
 *       ### ๐ ุงูุชูุซูู ุงููุทููุจ:
 *       - ูุฌุจ ุฅุฑุณุงู ุฑูุฒ ุงูุชูุซูู ูู header: `Authorization: Bearer YOUR_TOKEN`
 *       - ุงูุฑูุฒ ูุฌุจ ุฃู ูููู ุตุงูุญุงู ูุบูุฑ ููุชูู ุงูุตูุงุญูุฉ
 *       - ูุฌุจ ุฃู ูููู ุงููุณุชุฎุฏู ูุณุฌู ุฏุฎูู
 *       
 *       ### ๐ ุงูุจูุงูุงุช ุงูููุฑุฌุนุฉ:
 *       ูุชู ุฅุฑุฌุงุน ุฌููุน ูุนูููุงุช ุงููุณุชุฎุฏู ุจุงุณุชุซูุงุก:
 *       - ูููุฉ ุงููุฑูุฑ (ูุดูุฑุฉ ููุฎููุฉ)
 *       - ุฑูุฒ ุฅุนุงุฏุฉ ุชุนููู ูููุฉ ุงููุฑูุฑ
 *       - ุงูุจูุงูุงุช ุงูุญุณุงุณุฉ ุงูุฃุฎุฑู
 *       
 *       ### ๐ญ ุงูุจูุงูุงุช ุญุณุจ ููุน ุงููุณุชุฎุฏู:
 *       
 *       #### ููุทูุงุจ (`role: "user"`):
 *       - ุงูุจูุงูุงุช ุงูุฃุณุงุณูุฉ + ุงููุญุงูุธุฉ + ุงููุฑุญูุฉ ุงูุฏุฑุงุณูุฉ
 *       - ูุง ููุฌุฏ ูุซุงุฆู ุฃู ููุงุฏ ุชุฏุฑูุณูุฉ
 *       
 *       #### ูููุนูููู (`role: "instructor"`):
 *       - ุงูุจูุงูุงุช ุงูุฃุณุงุณูุฉ + ุงููุญุงูุธุฉ + ุงููุงุฏุฉ ุงูุชุฏุฑูุณูุฉ
 *       - ูุซููุฉ ุงูุชุฃููู (ุฅุฐุง ูุงูุช ููุฌูุฏุฉ)
 *       - ุญุงูุฉ ุงูููุงููุฉ ูู ุงูุฅุฏุงุฑุฉ
 *       
 *       #### ูููุฏูุฑูู (`role: "admin"`):
 *       - ุงูุจูุงูุงุช ุงูุฃุณุงุณูุฉ + ุงููุญุงูุธุฉ
 *       - ุตูุงุญูุงุช ุฅุฏุงุฑูุฉ (ูู endpoints ุฃุฎุฑู)
 *       
 *       ### ๐ก ูุตุงุฆุญ ููุชุทููุฑ:
 *       - ุงุณุชุฎุฏู ูุฐุง endpoint ูุนุฑุถ ูุนูููุงุช ุงููุณุชุฎุฏู ูู ุงููุงุฌูุฉ
 *       - ุงุญูุธ ุงูุจูุงูุงุช ูุญููุงู ูุชุฌูุจ ุงูุทูุจุงุช ุงููุชูุฑุฑุฉ
 *       - ุชุญูู ูู `isLoggedIn` ููุชุฃูุฏ ูู ุญุงูุฉ ุชุณุฌูู ุงูุฏุฎูู
 *       - ูููุนูููู: ุชุญูู ูู `status` ููุนุฑูุฉ ุญุงูุฉ ุงูููุงููุฉ
 *       
 *       ### ๐ ุญุงูุงุช ุงูุงุณุชุฎุฏุงู:
 *       - ุนุฑุถ ุงูููู ุงูุดุฎุตู ูู ููุญุฉ ุงูุชุญูู
 *       - ููุก ุงูููุงุฐุฌ ูุณุจูุงู ุจุจูุงูุงุช ุงููุณุชุฎุฏู
 *       - ุงูุชุญูู ูู ุตูุงุญูุงุช ุงููุณุชุฎุฏู
 *       - ุนุฑุถ ูุนูููุงุช ุงููุณุชุฎุฏู ูู ุงูุชุทุจูู
 *     
 *     tags: [User]
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         $ref: '#/components/responses/UserProfileSuccess'
 *       401:
 *         description: ุบูุฑ ูุตุฑุญ - ุงูุฑูุฒ ุงููููุฒ ูุทููุจ ุฃู ุบูุฑ ุตุญูุญ
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                   example: false
 *                 message:
 *                   type: string
 *             examples:
 *               missing-token:
 *                 summary: ุงูุฑูุฒ ุงููููุฒ ููููุฏ
 *                 value:
 *                   success: false
 *                   message: "ุงูุฑูุฒ ุงููููุฒ ูุทููุจ"
 *               invalid-token:
 *                 summary: ุงูุฑูุฒ ุงููููุฒ ุบูุฑ ุตุญูุญ
 *                 value:
 *                   success: false
 *                   message: "ุงูุฑูุฒ ุงููููุฒ ุบูุฑ ุตุญูุญ"
 *               expired-token:
 *                 summary: ุงูุฑูุฒ ุงููููุฒ ููุชูู ุงูุตูุงุญูุฉ
 *                 value:
 *                   success: false
 *                   message: "ุงูุฑูุฒ ุงููููุฒ ููุชูู ุงูุตูุงุญูุฉ ุฃู ุบูุฑ ุตุงูุญ"
 *       404:
 *         description: ุงููุณุชุฎุฏู ุบูุฑ ููุฌูุฏ
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                   example: false
 *                 message:
 *                   type: string
 *                   example: "ุงููุณุชุฎุฏู ุบูุฑ ููุฌูุฏ"
 *       500:
 *         description: ุฎุทุฃ ูู ุงูุฎุงุฏู
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                   example: false
 *                 message:
 *                   type: string
 *                   example: "ุญุฏุซ ุฎุทุฃ ูู ุงูุฎุงุฏูุ ูุฑุฌู ุงููุญุงููุฉ ูุงุญูุงู"
 */
router.get("/profile", isAuthenticated, userController.getProfile);

export default router; 